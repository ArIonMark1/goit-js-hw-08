{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGuB,MAEjBC,EAAiBC,SAASC,cAAc,kBAExCC,EAAgBF,SAASC,cAAc,qBACvCE,EAAkBH,SAASC,cAAc,0BACzCG,EAAiB,GAoFvB,IAA2BC,EAAOC,EAlFlCP,EAAeQ,iBAAiB,SAAS,EAAAV,EAAAW,WAQzC,SAAyBC,GACrBL,EAAeK,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAyCrD,SAAuBC,EAAKD,GACxB,IACI,MAAME,EAAaC,KAAKC,UAAUJ,GAClCK,aAAaC,QAAQL,EAAKC,E,CAE5B,MAAOK,GACLC,QAAQC,IAAI,iBAAkBF,EAAIb,Q,GAhEjB,sBAsBPF,E,GAdiD,MACnEL,EAAeQ,iBAAiB,UA6BhC,SAAsBE,G,mBASlB,IAtBJ,SAA6Ba,GAEzB,IAAKpB,EAAcU,MAEf,OADAW,MAAM,wBACC,EAEJ,IAAKpB,EAAgBS,MAExB,OADAW,MAAM,6BACC,EAEX,OAAO,C,CAUUC,GAGb,OAEJJ,QAAQC,IAAI,wCAAuE,CAAEhB,MAAOH,EAAcU,MAAON,QAASH,EAAgBS,QAE5GK,aAAjBQ,QACbhB,EAAMiB,cAAcC,O,IA0BxB,SAAyBC,GAGA,IAAhBA,EACG,OAGwB1B,EAAlBU,MAAQgB,EAAKvB,MAC3BF,EAAgBS,MAAQgB,EAAKtB,O,CA3EjCuB,CAwDA,SAAyBhB,GACrB,IACI,MAAMiB,EAAkBb,aAAac,QAAQlB,GAG7C,OAFmBE,KAAKiB,MAAMF,E,CAGhC,MAAOX,GACLC,QAAQC,IAAI,iBAAkBF,EAAIb,Q,EA/D1B2B,CAZS,wBA0FS3B,EA5EDH,EAgF7BC,GAJuBC,EA5ETH,GAgFOS,MAAQN,EAAMO,MACnCR,EAAeE,EAAQK,MAAQL,EAAQM","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from \"lodash\";\n\n// Ключ для сховища буде рядок \"feedback-form-state\"\nconst KEY_DATA_STORAGE = \"feedback-form-state\";\n\nconst getFormElement = document.querySelector(\".feedback-form\");\n\nconst getEmailInput = document.querySelector(\"input[name=email]\");\nconst getMessageInput = document.querySelector(\"textarea[name=message]\");\nconst objectDataForm = {};\n\ngetFormElement.addEventListener('input', throttle(fillDataStorage, 500));\ngetFormElement.addEventListener('submit', onSubmitForm);\n\n//     \ninputDataToForm(loadFromStorage(KEY_DATA_STORAGE))\n\nIsFornInputFilled(getEmailInput, getMessageInput)\n// =============================================================\nfunction fillDataStorage(event) {\n    objectDataForm[event.target.name] = event.target.value;\n    /*\n        Відстежую на формі подію input, \n        і щоразу записую у локальне сховище об'єкт з полями email і message, \n        у яких зберігаю поточні значення полів форми */\n    saveInStorage(KEY_DATA_STORAGE, objectDataForm);\n};\n\nfunction checkValidityFields(evt) { \n\n    if (!getEmailInput.value) {\n        alert('Empty email field!!');\n        return false;\n\n    } else if (!getMessageInput.value) { \n        alert('Need write some message!');\n        return false;\n    }\n    return true;\n}\n// =============================================================\nfunction onSubmitForm(event) { \n    /*\n        Під час сабміту форми очищую сховище і поля форми, \n        а також вивожу у консоль об'єкт з полями email, \n        message та їхніми поточними значеннями. */\n    event.preventDefault();\n\n    const checkRes = checkValidityFields(event);\n\n    if (!checkRes) { \n        return;\n    }\n    console.log('Вивід даних із полів вводу у консоль:', { email: getEmailInput.value, message: getMessageInput.value });\n\n    localStorage.clear();\n    event.currentTarget.reset();\n\n};\n// =======================================================\n// ======== Basicfunctions to work with the storage ======\nfunction saveInStorage(key, value) {\n    try {\n        const dataToSave = JSON.stringify(value);\n        localStorage.setItem(key, dataToSave);\n\n    } catch (err) { \n        console.log(\"Some problem: \", err.message)\n    }\n};\n\nfunction loadFromStorage(key) { \n    try {\n        const dataFromStorage = localStorage.getItem(key);\n        const parsedData = JSON.parse(dataFromStorage);\n\n        return parsedData\n    } catch (err) { \n        console.log(\"Some problem: \", err.message)\n    }\n};\n\nfunction inputDataToForm(data) {\n    // Під час завантаження сторінки перевіряю стан сховища, \n    // якщо там є збережені дані\n    if (!data) { \n            return;\n    }\n    // заповнюю поля форми даними зі сховища.\n    getEmailInput.value = data.email;\n    getMessageInput.value = data.message;\n}\n\nfunction IsFornInputFilled(email, message) { \n    //  при перезагрузкі сторінки об'єкт очищується, і при повторному заповнені полів об'єкт перезаписується\n    // щоб не втрачати дані з полів, при вигрузкі даних із сховища після перезагрузки сторінки передаю їх як\n    // початкові значення в об'єкт\n    objectDataForm[email.name] = email.value;\n    objectDataForm[message.name] = message.value;\n}"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$getFormElement","document","querySelector","$945622fd0f572e60$var$getEmailInput","$945622fd0f572e60$var$getMessageInput","$945622fd0f572e60$var$objectDataForm","email","message","addEventListener","throttle","event","target","name","value","key","dataToSave","JSON","stringify","localStorage","setItem","err","console","log","evt","alert","$945622fd0f572e60$var$checkValidityFields","clear","currentTarget","reset","data","$945622fd0f572e60$var$inputDataToForm","dataFromStorage","getItem","parse","$945622fd0f572e60$var$loadFromStorage"],"version":3,"file":"03-feedback.5c3e28ed.js.map"}