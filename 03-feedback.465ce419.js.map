{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAmB,sBAEnBC,EAAiBC,SAASC,cAAc,kBACxCC,EAAgBF,SAASC,cAAc,qBACvCE,EAAkBH,SAASC,cAAc,0BA2C/C,SAASG,EAAgBC,GACrB,IACI,IAAMC,EAAkBC,aAAaC,QAAQH,GAG7C,OAFmBI,KAAKC,MAAMJ,E,CAGhC,MAAOK,GACLC,QAAQC,IAAI,iBAAkBF,EAAIG,Q,EAhD1Cf,EAAegB,iBAAiB,SAAS,EAAAnB,EAAAoB,WAQzC,SAA0BC,IAuB1B,SAAuBZ,EAAKa,GACxB,IACI,IAAMC,EAAaV,KAAKW,UAAUF,GAClCX,aAAac,QAAQhB,EAAKc,E,CAE5B,MAAOR,GACLC,QAAQC,IAAI,iBAAkBF,EAAIG,Q,KAxBxB,CAAmBQ,MAAOpB,EAAcgB,MAAOJ,QAASX,EAAgBe,O,GAbtB,MACpEnB,EAAegB,iBAAiB,UAehC,SAAsBE,G,mBAOlBL,QAAQC,IAAI,CAAES,MAAOpB,EAAcgB,MAAOJ,QAASX,EAAgBe,QAEnEX,aAAagB,QACbN,EAAMO,cAAcC,O,IAtBxBb,QAAQC,IAAI,sBAAuBT,EAAgBN,IAgDnD,SAAyB4B,GAE8C,IAA9DA,EACG,OAGRd,QAAQC,IAAI,uBAAwBa,GACpCxB,EAAcgB,MAAQQ,EAAKJ,MAC3BnB,EAAgBe,MAAQQ,EAAKZ,O,CAtDjCa,CAAgBvB,EAAgBN,G","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from \"lodash\";\n\n// Ключ для сховища буде рядок \"feedback-form-state\"\nconst KEY_DATA_STORAGE = \"feedback-form-state\"\n\nconst getFormElement = document.querySelector(\".feedback-form\");\nconst getEmailInput = document.querySelector(\"input[name=email]\");\nconst getMessageInput = document.querySelector(\"textarea[name=message]\");\n\ngetFormElement.addEventListener('input', throttle(inputDataStorage, 500));\ngetFormElement.addEventListener('submit', onSubmitForm);\n\n\nconsole.log('Data from Storage: ', loadFromStorage(KEY_DATA_STORAGE))\n\ninputDataToForm(loadFromStorage(KEY_DATA_STORAGE))\n// =============================================================\nfunction inputDataStorage(event) {\n     /*\n        Відстежуй на формі подію input, \n        і щоразу записуй у локальне сховище об'єкт з полями email і message, \n        у яких зберігай поточні значення полів форми */\n    saveInStorage(KEY_DATA_STORAGE, {email: getEmailInput.value, message: getMessageInput.value});\n};\n// =============================================================\nfunction onSubmitForm(event) { \n    /*\n        Під час сабміту форми очищую сховище і поля форми, \n        а також вивожу у консоль об'єкт з полями email, \n        message та їхніми поточними значеннями. */\n    event.preventDefault();\n\n    console.log({ email: getEmailInput.value, message: getMessageInput.value });\n\n    localStorage.clear();\n    event.currentTarget.reset();\n\n};\n// =======================================================\n// ======== Basicfunctions to work with the storage ======\nfunction saveInStorage(key, value) {\n    try {\n        const dataToSave = JSON.stringify(value);\n        localStorage.setItem(key, dataToSave);\n\n    } catch (err) { \n        console.log(\"Some problem: \", err.message)\n    }\n};\n\nfunction loadFromStorage(key) { \n    try {\n        const dataFromStorage = localStorage.getItem(key);\n        const parsedData = JSON.parse(dataFromStorage);\n\n        return parsedData\n    } catch (err) { \n        console.log(\"Some problem: \", err.message)\n    }\n};\n\nfunction inputDataToForm(data) {\n    // Під час завантаження сторінки перевіряю стан сховища, якщо там є збережені дані\n    if (!data) { \n            return;\n    }\n    // заповнюю поля форми даними зі сховища.\n    console.log('Data from function: ', data);\n    getEmailInput.value = data.email;\n    getMessageInput.value = data.message;\n\n}"],"names":["$1WSnx","parcelRequire","$b00c40859be242c5$var$KEY_DATA_STORAGE","$b00c40859be242c5$var$getFormElement","document","querySelector","$b00c40859be242c5$var$getEmailInput","$b00c40859be242c5$var$getMessageInput","$b00c40859be242c5$var$loadFromStorage","key","dataFromStorage","localStorage","getItem","JSON","parse","err","console","log","message","addEventListener","throttle","event","value","dataToSave","stringify","setItem","email","clear","currentTarget","reset","data","$b00c40859be242c5$var$inputDataToForm"],"version":3,"file":"03-feedback.465ce419.js.map"}